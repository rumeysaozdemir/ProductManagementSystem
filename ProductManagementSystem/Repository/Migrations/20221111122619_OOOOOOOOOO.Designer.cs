// <auto-generated />
using System;
using ProductManagementSystem.Repository.AppDbContexts.AppDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ProductManagementSystem.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221111122619_OOOOOOOOOO")]
    partial class OOOOOOOOOO
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProductManagementSystem.Core.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ActiveDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsActiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsActiveDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsActiveDateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsDelete")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IsDeleteDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsDeleteDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsDeleteDateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = 0,
                            IsActive = 0,
                            IsActiveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActiveDateUpdateUserId = 0,
                            IsActiveDateUserId = 0,
                            IsDelete = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdateUserId = 0,
                            IsDeleteDateUserId = 0,
                            Name = "Ofis Ürünleri",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUserId = 0
                        },
                        new
                        {
                            Id = 2,
                            ActiveDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = 0,
                            IsActive = 0,
                            IsActiveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActiveDateUpdateUserId = 0,
                            IsActiveDateUserId = 0,
                            IsDelete = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdateUserId = 0,
                            IsDeleteDateUserId = 0,
                            Name = "Polen Haşere",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUserId = 0
                        },
                        new
                        {
                            Id = 3,
                            ActiveDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = 0,
                            IsActive = 0,
                            IsActiveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActiveDateUpdateUserId = 0,
                            IsActiveDateUserId = 0,
                            IsDelete = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdateUserId = 0,
                            IsDeleteDateUserId = 0,
                            Name = "İzolasyon",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUserId = 0
                        },
                        new
                        {
                            Id = 4,
                            ActiveDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = 0,
                            IsActive = 0,
                            IsActiveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActiveDateUpdateUserId = 0,
                            IsActiveDateUserId = 0,
                            IsDelete = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdateUserId = 0,
                            IsDeleteDateUserId = 0,
                            Name = "İnşaat",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUserId = 0
                        },
                        new
                        {
                            Id = 5,
                            ActiveDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = 0,
                            IsActive = 0,
                            IsActiveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActiveDateUpdateUserId = 0,
                            IsActiveDateUserId = 0,
                            IsDelete = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdateUserId = 0,
                            IsDeleteDateUserId = 0,
                            Name = "Montaj Asma",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUserId = 0
                        },
                        new
                        {
                            Id = 6,
                            ActiveDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = 0,
                            IsActive = 0,
                            IsActiveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActiveDateUpdateUserId = 0,
                            IsActiveDateUserId = 0,
                            IsDelete = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdateUserId = 0,
                            IsDeleteDateUserId = 0,
                            Name = "Tadilat",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUserId = 0
                        },
                        new
                        {
                            Id = 7,
                            ActiveDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = 0,
                            IsActive = 0,
                            IsActiveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActiveDateUpdateUserId = 0,
                            IsActiveDateUserId = 0,
                            IsDelete = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdateUserId = 0,
                            IsDeleteDateUserId = 0,
                            Name = "Tamir",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUserId = 0
                        },
                        new
                        {
                            Id = 8,
                            ActiveDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = 0,
                            IsActive = 0,
                            IsActiveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActiveDateUpdateUserId = 0,
                            IsActiveDateUserId = 0,
                            IsDelete = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdateUserId = 0,
                            IsDeleteDateUserId = 0,
                            Name = "Maskeleme",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUserId = 0
                        },
                        new
                        {
                            Id = 9,
                            ActiveDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = 0,
                            IsActive = 0,
                            IsActiveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActiveDateUpdateUserId = 0,
                            IsActiveDateUserId = 0,
                            IsDelete = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdateUserId = 0,
                            IsDeleteDateUserId = 0,
                            Name = "Kaydırmaz",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUserId = 0
                        },
                        new
                        {
                            Id = 10,
                            ActiveDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = 0,
                            IsActive = 0,
                            IsActiveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActiveDateUpdateUserId = 0,
                            IsActiveDateUserId = 0,
                            IsDelete = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdateUserId = 0,
                            IsDeleteDateUserId = 0,
                            Name = "İç Cephe Boyalar",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUserId = 0
                        },
                        new
                        {
                            Id = 11,
                            ActiveDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = 0,
                            IsActive = 0,
                            IsActiveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActiveDateUpdateUserId = 0,
                            IsActiveDateUserId = 0,
                            IsDelete = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdateUserId = 0,
                            IsDeleteDateUserId = 0,
                            Name = "Dış Cephe Boyalar",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUserId = 0
                        },
                        new
                        {
                            Id = 12,
                            ActiveDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = 0,
                            IsActive = 0,
                            IsActiveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActiveDateUpdateUserId = 0,
                            IsActiveDateUserId = 0,
                            IsDelete = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdateUserId = 0,
                            IsDeleteDateUserId = 0,
                            Name = "Tinerler",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUserId = 0
                        });
                });

            modelBuilder.Entity("ProductManagementSystem.Core.Models.ProductBrands", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ActiveDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BrandsName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BrandsWebUrl")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Explanation")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsActiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsActiveDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsActiveDateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsDelete")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IsDeleteDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsDeleteDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsDeleteDateUserId")
                        .HasColumnType("int");

                    b.Property<string>("LogoBase64Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoFileName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LogoFilePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ProductBrandId")
                        .HasColumnType("int");

                    b.Property<int>("ProductFeaturesId")
                        .HasColumnType("int");

                    b.Property<string>("ShortCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductBrands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BrandsName = "BBBBb",
                            BrandsWebUrl = "AAAA",
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = 0,
                            Explanation = "dfgvgrfg",
                            IsActive = 0,
                            IsActiveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActiveDateUpdateUserId = 0,
                            IsActiveDateUserId = 0,
                            IsDelete = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdateUserId = 0,
                            IsDeleteDateUserId = 0,
                            ProductBrandId = 0,
                            ProductFeaturesId = 0,
                            ShortCode = "sddsad",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUserId = 0
                        });
                });

            modelBuilder.Entity("ProductManagementSystem.Core.Models.ProductColors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ActiveDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Code")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ColorBase64Content")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ColorFileName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ColorFilePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Explanation")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsActiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsActiveDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsActiveDateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsDelete")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IsDeleteDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsDeleteDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsDeleteDateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProductColorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductColors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = 0,
                            IsActive = 0,
                            IsActiveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActiveDateUpdateUserId = 0,
                            IsActiveDateUserId = 0,
                            IsDelete = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdateUserId = 0,
                            IsDeleteDateUserId = 0,
                            Name = "Sarı",
                            ProductColorId = 0,
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUserId = 0
                        });
                });

            modelBuilder.Entity("ProductManagementSystem.Core.Models.ProductCurrencyUnits", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ActiveDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Explanation")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsActiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsActiveDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsActiveDateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsDelete")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IsDeleteDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsDeleteDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsDeleteDateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProductCurrencyId")
                        .HasColumnType("int");

                    b.Property<int>("ProductFeaturesId")
                        .HasColumnType("int");

                    b.Property<string>("ShortCode")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductCurrencyUnits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = 0,
                            Explanation = "dfgvgrfg",
                            IsActive = 0,
                            IsActiveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActiveDateUpdateUserId = 0,
                            IsActiveDateUserId = 0,
                            IsDelete = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdateUserId = 0,
                            IsDeleteDateUserId = 0,
                            Name = "BBBBb",
                            ProductCurrencyId = 0,
                            ProductFeaturesId = 0,
                            ShortCode = "AAAA",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUserId = 0
                        });
                });

            modelBuilder.Entity("ProductManagementSystem.Core.Models.ProductFeatures", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ActiveDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsActiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsActiveDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsActiveDateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsDelete")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IsDeleteDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsDeleteDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsDeleteDateUserId")
                        .HasColumnType("int");

                    b.Property<int>("ProductBrandId")
                        .HasColumnType("int");

                    b.Property<int>("ProductColorsId")
                        .HasColumnType("int");

                    b.Property<int>("ProductCurrencyId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProductMeasurementId")
                        .HasColumnType("int");

                    b.Property<int>("ProductProjectId")
                        .HasColumnType("int");

                    b.Property<int>("ProductVatId")
                        .HasColumnType("int");

                    b.Property<int>("ProductWeightId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductBrandId")
                        .IsUnique();

                    b.HasIndex("ProductColorsId")
                        .IsUnique();

                    b.HasIndex("ProductCurrencyId")
                        .IsUnique();

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.HasIndex("ProductMeasurementId")
                        .IsUnique();

                    b.HasIndex("ProductProjectId")
                        .IsUnique();

                    b.HasIndex("ProductVatId")
                        .IsUnique();

                    b.HasIndex("ProductWeightId")
                        .IsUnique();

                    b.ToTable("ProductFeatures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveDateUpdate = new DateTime(2022, 11, 11, 15, 26, 18, 749, DateTimeKind.Local).AddTicks(3599),
                            CreateDate = new DateTime(2022, 11, 11, 15, 26, 18, 749, DateTimeKind.Local).AddTicks(3588),
                            CreateUserId = 1,
                            IsActive = 1,
                            IsActiveDate = new DateTime(2022, 11, 11, 15, 26, 18, 749, DateTimeKind.Local).AddTicks(3599),
                            IsActiveDateUpdateUserId = 1,
                            IsActiveDateUserId = 1,
                            IsDelete = 1,
                            IsDeleteDate = new DateTime(2022, 11, 11, 15, 26, 18, 749, DateTimeKind.Local).AddTicks(3600),
                            IsDeleteDateUpdate = new DateTime(2022, 11, 11, 15, 26, 18, 749, DateTimeKind.Local).AddTicks(3600),
                            IsDeleteDateUpdateUserId = 1,
                            IsDeleteDateUserId = 1,
                            ProductBrandId = 1,
                            ProductColorsId = 1,
                            ProductCurrencyId = 1,
                            ProductId = 1,
                            ProductMeasurementId = 1,
                            ProductProjectId = 1,
                            ProductVatId = 1,
                            ProductWeightId = 1,
                            UpdateDate = new DateTime(2022, 11, 11, 15, 26, 18, 749, DateTimeKind.Local).AddTicks(3598),
                            UpdateUserId = 1
                        });
                });

            modelBuilder.Entity("ProductManagementSystem.Core.Models.ProductMeasurementUnits", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ActiveDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Explanation")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsActiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsActiveDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsActiveDateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsDelete")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IsDeleteDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsDeleteDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsDeleteDateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProductMeasurementId")
                        .HasColumnType("int");

                    b.Property<string>("ShortCode")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductMeasurementUnits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = 0,
                            IsActive = 0,
                            IsActiveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActiveDateUpdateUserId = 0,
                            IsActiveDateUserId = 0,
                            IsDelete = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdateUserId = 0,
                            IsDeleteDateUserId = 0,
                            Name = "XXX",
                            ProductMeasurementId = 0,
                            ShortCode = "xx",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUserId = 0
                        });
                });

            modelBuilder.Entity("ProductManagementSystem.Core.Models.ProductProjects", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ActiveDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Explanation")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsActiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsActiveDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsActiveDateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsDelete")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IsDeleteDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsDeleteDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsDeleteDateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProductFeaturesId")
                        .HasColumnType("int");

                    b.Property<int>("ProductProjectId")
                        .HasColumnType("int");

                    b.Property<string>("ShortCode")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductProjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = 0,
                            IsActive = 0,
                            IsActiveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActiveDateUpdateUserId = 0,
                            IsActiveDateUserId = 0,
                            IsDelete = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdateUserId = 0,
                            IsDeleteDateUserId = 0,
                            Name = "Aaa",
                            ProductFeaturesId = 0,
                            ProductProjectId = 0,
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUserId = 0
                        });
                });

            modelBuilder.Entity("ProductManagementSystem.Core.Models.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ActiveDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Barcode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Explanation")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ExplanationWebUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsActiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsActiveDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsActiveDateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsDelete")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IsDeleteDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsDeleteDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsDeleteDateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsMixture")
                        .HasColumnType("int");

                    b.Property<string>("LogoBase64Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoFileName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LogoFilePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("TechnicalWebUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Barcode = "AS123",
                            CategoryId = 1,
                            Code = "123AS",
                            CreateDate = new DateTime(2022, 11, 11, 15, 26, 18, 749, DateTimeKind.Local).AddTicks(3886),
                            CreateUserId = 0,
                            ExpirationDate = new DateTime(2022, 11, 11, 15, 26, 18, 749, DateTimeKind.Local).AddTicks(3884),
                            Explanation = "hghghggh",
                            ExplanationWebUrl = "dlld",
                            IsActive = 0,
                            IsActiveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActiveDateUpdateUserId = 0,
                            IsActiveDateUserId = 0,
                            IsDelete = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdateUserId = 0,
                            IsDeleteDateUserId = 0,
                            IsMixture = 0,
                            LogoBase64Content = "ad",
                            LogoFileName = "sdf",
                            LogoFilePath = "sdsdf",
                            Name = "Test Ürün1",
                            PurchasePrice = 10m,
                            SalePrice = 15m,
                            Stock = 1,
                            TechnicalWebUrl = "dfsd",
                            UpdateDate = new DateTime(2022, 11, 11, 15, 26, 18, 749, DateTimeKind.Local).AddTicks(3887),
                            UpdateUserId = 0
                        });
                });

            modelBuilder.Entity("ProductManagementSystem.Core.Models.ProductVatUnits", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ActiveDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Code")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Explanation")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsActiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsActiveDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsActiveDateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsDelete")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IsDeleteDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsDeleteDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsDeleteDateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProductVatId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductVatUnits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Code = "1",
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = 0,
                            IsActive = 0,
                            IsActiveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActiveDateUpdateUserId = 0,
                            IsActiveDateUserId = 0,
                            IsDelete = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdateUserId = 0,
                            IsDeleteDateUserId = 0,
                            Name = "XXX",
                            ProductVatId = 0,
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUserId = 0
                        });
                });

            modelBuilder.Entity("ProductManagementSystem.Core.Models.ProductWeightUnits", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ActiveDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Explanation")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsActiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsActiveDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsActiveDateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsDelete")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IsDeleteDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsDeleteDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsDeleteDateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProductWeightId")
                        .HasColumnType("int");

                    b.Property<string>("ShortCode")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductWeightUnits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = 0,
                            IsActive = 0,
                            IsActiveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActiveDateUpdateUserId = 0,
                            IsActiveDateUserId = 0,
                            IsDelete = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdateUserId = 0,
                            IsDeleteDateUserId = 0,
                            Name = "XXX",
                            ProductWeightId = 0,
                            ShortCode = "X1",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUserId = 0
                        });
                });

            modelBuilder.Entity("ProductManagementSystem.Core.Models.ProductFeatures", b =>
                {
                    b.HasOne("ProductManagementSystem.Core.Models.ProductBrands", "ProductBrands")
                        .WithOne("ProductFeatures")
                        .HasForeignKey("ProductManagementSystem.Core.Models.ProductFeatures", "ProductBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductManagementSystem.Core.Models.ProductColors", "ProductColors")
                        .WithOne("ProductFeatures")
                        .HasForeignKey("ProductManagementSystem.Core.Models.ProductFeatures", "ProductColorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductManagementSystem.Core.Models.ProductCurrencyUnits", "ProductCurrencyUnits")
                        .WithOne("ProductFeatures")
                        .HasForeignKey("ProductManagementSystem.Core.Models.ProductFeatures", "ProductCurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductManagementSystem.Core.Models.Products", "Products")
                        .WithOne("ProductFeatures")
                        .HasForeignKey("ProductManagementSystem.Core.Models.ProductFeatures", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductManagementSystem.Core.Models.ProductMeasurementUnits", "ProductMeasurementUnits")
                        .WithOne("ProductFeatures")
                        .HasForeignKey("ProductManagementSystem.Core.Models.ProductFeatures", "ProductMeasurementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductManagementSystem.Core.Models.ProductProjects", "ProductProjects")
                        .WithOne("ProductFeatures")
                        .HasForeignKey("ProductManagementSystem.Core.Models.ProductFeatures", "ProductProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductManagementSystem.Core.Models.ProductVatUnits", "ProductVatUnits")
                        .WithOne("ProductFeatures")
                        .HasForeignKey("ProductManagementSystem.Core.Models.ProductFeatures", "ProductVatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductManagementSystem.Core.Models.ProductWeightUnits", "ProductWeightUnits")
                        .WithOne("ProductFeatures")
                        .HasForeignKey("ProductManagementSystem.Core.Models.ProductFeatures", "ProductWeightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductBrands");

                    b.Navigation("ProductColors");

                    b.Navigation("ProductCurrencyUnits");

                    b.Navigation("ProductMeasurementUnits");

                    b.Navigation("ProductProjects");

                    b.Navigation("ProductVatUnits");

                    b.Navigation("ProductWeightUnits");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("ProductManagementSystem.Core.Models.Products", b =>
                {
                    b.HasOne("ProductManagementSystem.Core.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ProductManagementSystem.Core.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ProductManagementSystem.Core.Models.ProductBrands", b =>
                {
                    b.Navigation("ProductFeatures");
                });

            modelBuilder.Entity("ProductManagementSystem.Core.Models.ProductColors", b =>
                {
                    b.Navigation("ProductFeatures");
                });

            modelBuilder.Entity("ProductManagementSystem.Core.Models.ProductCurrencyUnits", b =>
                {
                    b.Navigation("ProductFeatures");
                });

            modelBuilder.Entity("ProductManagementSystem.Core.Models.ProductMeasurementUnits", b =>
                {
                    b.Navigation("ProductFeatures");
                });

            modelBuilder.Entity("ProductManagementSystem.Core.Models.ProductProjects", b =>
                {
                    b.Navigation("ProductFeatures");
                });

            modelBuilder.Entity("ProductManagementSystem.Core.Models.Products", b =>
                {
                    b.Navigation("ProductFeatures");
                });

            modelBuilder.Entity("ProductManagementSystem.Core.Models.ProductVatUnits", b =>
                {
                    b.Navigation("ProductFeatures");
                });

            modelBuilder.Entity("ProductManagementSystem.Core.Models.ProductWeightUnits", b =>
                {
                    b.Navigation("ProductFeatures");
                });
#pragma warning restore 612, 618
        }
    }
}
